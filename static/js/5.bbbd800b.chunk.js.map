{"version":3,"sources":["actions.js","Components/AllaFormer/AllaFormer.js"],"names":["bekrafta","log","dispatch","type","BEKRAFTA_SUCCES","payload","gorom","BEKRAFTA_FAILED","setMingla","state","MINGLA_STATE","fillWorkList","min","max","workList","verb","språk","i","push","WORKLIST_FILLED","WorkList","Språk","testList","console","InitialWorkList","WORKLIST_INITIAL_STATE","FillCheckVerb","Mingla","int","CheckVerb","splice","Math","floor","random","length","Object","keys","map","value","CHECKVERB","FillSvarVerb","SvarVerb","document","getElementById","toLowerCase","SVARVERB","check1","a","b","c","d","FillTestList","Verb","nederländska","presens","preteritum","supinum","backgroundColor","correctAnswer","name","FILLED_TESTLIST","ClearTestList","EMPTY_TESTLIST","AllaFormer","props","fillWordList","formList","Work","forEach","key","values","setState","data","spliceWordList","GiveVerb","number","workverb","verbform","find","test","fillSvarList","inf","svar","check","nästa","style","infinitiv","visibility","innerHTML","disabled","this","className","placeholder","aria-label","aria-describedby","id","onClick","Component","connect","VerbReducer"],"mappings":"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","file":"static/js/5.bbbd800b.chunk.js","sourcesContent":["import {\n  BEKRAFTA_SUCCES,\n  BEKRAFTA_FAILED,\n  MINGLA_STATE, \n  WORKLIST_INITIAL_STATE,\n  WORKLIST_FILLED,\n  CHECKVERB, \n  SVARVERB,\n  FILLED_TESTLIST,\n  EMPTY_TESTLIST,\n  } from './Constants';\n\nexport const bekrafta = (log) => (dispatch) => {\n  dispatch({\n    type: BEKRAFTA_SUCCES,\n    payload: log,\n  })\n}\n\nexport const gorom = () => (dispatch) => {\n  dispatch({\n    type: BEKRAFTA_FAILED,\n    payload: 'check',\n  })\n}\n\nexport const setMingla = (state) => (dispatch) => {\n  dispatch({\n    type: MINGLA_STATE,\n    payload: state,\n  })\n}\n\nexport const fillWorkList = (min, max, workList, verb, språk) => (dispatch) => {\n  var i;\n  for (i = min; i < max; i++) {\n      workList.push(verb[i]);\n  }\n  dispatch({\n    type: WORKLIST_FILLED,\n    payload: {WorkList:workList, Språk:språk, testList:workList,},\n    });\n  console.log(workList);\n}\n\nexport const InitialWorkList = () => (dispatch) => {\n  dispatch({type: WORKLIST_INITIAL_STATE});\n  console.log('initial state');\n  \n}\n\nexport const FillCheckVerb = (Mingla, WorkList, int, CheckVerb) => (dispatch) => {\n  if(Mingla){\n    if(int[0]!==0){WorkList.splice(int[0]-1,1)};\n    int[0] = Math.floor(Math.random() * (WorkList.length - 1)) + 1;\n  }\n  else {\n    if(WorkList.length!==0 && int[0]!==0){\n      WorkList.splice(0,1)\n    }\n    else {\n      int[0]=1;\n    }\n  }\n  console.log(WorkList[0]);\n  Object.keys(WorkList[0]).map((value)=> {CheckVerb[value] = WorkList[int[0]-1][value];return(value);});\n  dispatch(\n  {\n    type: CHECKVERB,\n    payload:{WorkList,int,CheckVerb},\n  })\n}\n\nexport const FillSvarVerb = (SvarVerb) => (dispatch) => {\n  Object.keys(SvarVerb).map((value)=> {SvarVerb[value]=document.getElementById(value).value.toLowerCase();return(value);});\n  dispatch({\n    type:SVARVERB,\n    payload: SvarVerb\n    })\n}\n\nconst check1 = (a, b, c, d) => { \n  if (a === b)\n  {\n    return(c);//\"#8bbc33\";\n  }\n  else\n  {\n    return(d);\n  }\n}\n\nexport const FillTestList = (SvarVerb, testList, CheckVerb) => (dispatch) => {\n  const Verb = {\n    nederländska: CheckVerb.nederländska,\n    presens: SvarVerb.presens,\n    preteritum: SvarVerb.preteritum,\n    supinum: SvarVerb.supinum,\n    backgroundColor:{},\n    correctAnswer: {},\n  };\n  Object.keys(SvarVerb).map(value =>{\n    const name=value+'Color';\n    Verb.backgroundColor[name]=check1(SvarVerb[value], CheckVerb[value],'rgb(139, 188, 51)',\"#ff4d4d\");\n    Verb.correctAnswer[value]=check1(SvarVerb[value], CheckVerb[value], '' , `(${CheckVerb[value]})` );\n    return(Verb);\n  });\n  testList.push(Verb);\n  dispatch({\n    type: FILLED_TESTLIST,\n    payload: testList,\n    })\n}\n\n//voorlopig niet gebruikt!\nexport const fillTestList2 = (min, max, testList, workList, verb) => (dispatch) => {\n  var i;\n  for (i = min; i < max; i++) {\n      testList.push(verb[i]);\n  }\n  workList=testList;\n  console.log(workList);\n  //Object.keys(testList).map(value=>{value['backgroundColor']={presensColor:'',preteritumColor:'',supinumColor:'',}});\n  dispatch({\n    type: FILLED_TESTLIST,\n    payload: testList,\n    })\n}\n\n\nexport const ClearTestList = () => (dispatch) => {\n  dispatch({\n    type: EMPTY_TESTLIST,\n  })\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { gorom,} from '../../actions';\n\n\nconst mapStateToProps = state => {\n    return {\n        Work: state.VerbReducer.WorkList,\n    }\n}\n\n\nconst mapsDispatchToProps = (dispatch) => {\n    return {\n    \t\tgorom: () => dispatch(gorom()),\n    \t}\n    }\n\nclass AllaFormer extends Component {\n\n\tconstructor(props) {\n    \tsuper(props);\n    \tthis.state = {\n    \t\tdata:[[\"\",0]],\n    \t\tworkverb:\"\", \n    \t\tsvar:\"\",\n    \t\tverb:{},\n    \t\tverbform:\"\",\n    \t\tcheck: false,\n    \t};\n  }\n\n\tfillWordList = () => {\n\t\tconst formList = [];\n\t\tthis.props.Work.forEach((value,key) => {\n\t\t\tObject.values(value).forEach(verb => {\n\t\t\t\tformList.push([verb,key]);\n\t\t\t})\n\t\t})\n\t\tthis.setState({data:formList});\n\t}\n\n\tspliceWordList = (int) => {\n\t\tconst data = this.state.data;\n\t\tdata.splice(int,1);\n\t\tthis.setState({data:data});\n\t}\n\n\tGiveVerb = () => {\n\t\tconst int = Math.floor(Math.random() * this.state.data.length);\n\t\tconst number = this.state.data[int][1];\n\t\tconst verb = this.props.Work[number];\n\t\tthis.setState({\n\t\t\tworkverb: this.state.data[int][0],\n\t\t\tverb:verb,\n\t\t\tverbform:Object.keys(verb).find((test)=>{\n\t\t\t\treturn(verb[test] === this.state.data[int][0])\n\t\t\t}),\n\t\t});\n\t\tthis.spliceWordList(int);\n\n\t}\n\n\tfillSvarList = () => {\n\t\tconst inf = document.getElementById(\"infinitiv\").value.toLowerCase();\n\t\tthis.setState({svar:inf,});\n\t\t// this.setState(prevState => ({\n  // \t\t\tsvar: [...prevState.svar,inf,]\n\t\t// })); \n\t}\n\n\tcheck = (a,b) => {\n\t\tif (a === b)\n  \t\t{\n    \t\treturn('rgb(139, 188, 51)');\n  \t\t}\n  \t\telse\n  \t\t{\n    \t\treturn(\"#ff4d4d\");\n  \t\t}\n\t}\n\n\tnästa = () => {\n\t\tif(this.state.check) {\n\t\t\t//this.fillSvarList();\n\t\t\tdocument.getElementById(\"infinitiv\").style.backgroundColor = this.check(document.getElementById(\"infinitiv\").value.toLowerCase(),this.state.verb.infinitiv);\n\t\t\tdocument.getElementById(\"verbform\").style.backgroundColor = this.check(document.getElementById(\"verbform\").value.toLowerCase(),this.state.verbform);\n\t\t\tdocument.getElementById(\"Answer1\").style.visibility=\"visible\";\n\t\t\tdocument.getElementById(\"NästaBtn\").innerHTML=\"Nästa\";\n\t\t\tthis.setState({check:false});\n\t\t\tif(this.state.data.length===0){document.getElementById(\"NästaBtn\").disabled=true;};\n\n\t\t}\n\t\telse {\n\t\t\tthis.GiveVerb();\n\t\t\tdocument.getElementById(\"infinitiv\").value=\"\";\n\t\t\tdocument.getElementById(\"verbform\").value=\"\";\n\t\t\tdocument.getElementById(\"infinitiv\").style.backgroundColor =\"\";\n\t\t\tdocument.getElementById(\"verbform\").style.backgroundColor=\"\";\n\t\t\tdocument.getElementById(\"Answer1\").style.visibility=\"hidden\";\n\t\t\tdocument.getElementById(\"NästaBtn\").innerHTML=\"Svara\";\n\t\t\tthis.setState({check:true});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fillWordList();\n\t}\n\t\n\trender() {\n\t\treturn(\n\t\t<div className='container'>\n\t\t\t<div className=\"d-flex col-sm m-2 justify-content-center\">\n\t\t\t{this.state.workverb}\n\t\t\t</div>\n\t\t\t<div className=\"d-flex flex-column flex-sm-column flex-md-column flex-lg-row\">\n\t\t\t\t<div className=\"col-sm m-2\">\n\t\t\t\t    <div className=\"input-group mb-3\">\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"infinitiv\" aria-label=\"infinitiv\" aria-describedby=\"basic-addon1\" id=\"infinitiv\" ></input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm m-2\">\n\t\t\t\t\t<div className=\"input-group mb-3\">\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"verbform\" aria-label=\"verbform\" aria-describedby=\"basic-addon1\" id=\"verbform\" ></input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='' id='Answer1' style={{visibility: 'hidden',}}>\n\t\t\t\t<div className='d-flex justify-content-center'>\n\t\t\t\t\t<p className='m-3 d-none d-lg-block d-xl-block' id='Ned'>{this.state.verb.nederländska}</p>\n\t\t\t\t\t<p className='m-3 d-none d-lg-block d-xl-block' id='inf'>{this.state.verb.infinitiv}</p>\n\t\t\t\t\t<p className='m-3 d-none d-lg-block d-xl-block' id='Pres'>{this.state.verb.presens}</p>\n\t\t\t\t\t<p className='m-3 d-none d-lg-block d-xl-block' id='Pret'>{this.state.verb.preteritum}</p>\n\t\t\t\t\t<p className='m-3 d-none d-lg-block d-xl-block' id='Sup'>{this.state.verb.supinum}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"d-flex col-sm m-2 justify-content-center\">\n\t\t\t\t<button type=\"button\" id='NästaBtn' className=\"btn btn-secondary btn-lg m-2\" onClick={this.nästa} >Nästa</button>\n\t\t\t\t<button type=\"button\" id='GorOm' className=\"btn btn-secondary btn-lg m-2\" onClick={()=>this.props.gorom()}>Gör om</button>\n\t\t\t</div>\n\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default connect(mapStateToProps, mapsDispatchToProps)(AllaFormer);"],"sourceRoot":""}